package com.hksanduo.shirodemo;

import java.util.LinkedHashMap;
import java.util.Map;
import org.apache.shiro.mgt.RememberMeManager;
import org.apache.shiro.mgt.SecurityManager;
import org.apache.shiro.spring.web.ShiroFilterFactoryBean;
import org.apache.shiro.web.mgt.CookieRememberMeManager;
import org.apache.shiro.web.mgt.DefaultWebSecurityManager;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;

@Configuration
public class ShiroConfig {
    public ShiroConfig() {
    }

    @Bean
    MainRealm mainRealm() {
        return new MainRealm();
    }

    /**
     * 配置记住我的管理器对象
     */
    @Bean
    RememberMeManager cookieRememberMeManager() {
        return new CookieRememberMeManager();
    }

    // 将rememberMe注入securityManager 
    @Bean
    SecurityManager securityManager(MainRealm mainRealm, RememberMeManager cookieRememberMeManager) {
        DefaultWebSecurityManager manager = new DefaultWebSecurityManager();
        // 写完mainRealm后把它注入给securityManager
        manager.setRealm(mainRealm);
        manager.setRememberMeManager(cookieRememberMeManager);
        return manager;
    }

    /**
     *  Shiro自带的过滤器，可以在这里配置拦截页面
     */
    @Bean(
            name = {"shiroFilter"}
    )
    ShiroFilterFactoryBean shiroFilterFactoryBean(SecurityManager securityManager) {
         // 1. 初始化一个ShiroFilter工程类
        ShiroFilterFactoryBean bean = new ShiroFilterFactoryBean();

         // 2. Shiro是通过SecurityManager来管理整个认证和授权流程的，这个SecurityManager可以在下面初始化
        bean.setSecurityManager(securityManager);

        // 设置登陆页路径。默认/login.jsp，可以在拦截器工厂中配置 或 使用此方法重置。
        bean.setLoginUrl("/login");
        // 配置没有权限跳转的页面。这是一个非常方便的用法，不需要在拦截器中来定义他。
        bean.setUnauthorizedUrl("/unauth");

        // 3. 有的页面不需登录任何人可以直接访问，有的需要登录才能访问，有的不仅要登录还需要相关权限才能访问
        Map<String, String> map = new LinkedHashMap();
        // 4. Shiro过滤器常用的有如下几种
        // 4.1. anon 任何人都能访问，如登录页面
        map.put("/doLogin", "anon");
        // 4.2 user，用户认证后和RememberMe都可通过；
        map.put("/**", "user");

        // 5.让ShiroFilter按这个规则拦截
        bean.setFilterChainDefinitionMap(map);
        return bean;
    }
}
